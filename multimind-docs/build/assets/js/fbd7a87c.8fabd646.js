"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[361],{1937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started/quickstart","title":"Quickstart","description":"Get started with MultiMind SDK in minutes!","source":"@site/docs/getting-started/quickstart.md","sourceDirName":"getting-started","slug":"/getting-started/quickstart","permalink":"/docs/getting-started/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/multimind-dev/multimind-sdk/edit/develop/docs/getting-started/quickstart.md","tags":[],"version":"current","frontMatter":{}}');var o=n(4848),i=n(8453);const s={},a="Quickstart",d={},l=[{value:"1. Create an Agent",id:"1-create-an-agent",level:2},{value:"2. Retrieval-Augmented Generation (RAG)",id:"2-retrieval-augmented-generation-rag",level:2}];function m(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"quickstart",children:"Quickstart"})}),"\n",(0,o.jsx)(t.p,{children:"Get started with MultiMind SDK in minutes!"}),"\n",(0,o.jsx)(t.h2,{id:"1-create-an-agent",children:"1. Create an Agent"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from multimind.models import OpenAIModel\nfrom multimind.agents import Agent, AgentMemory\nfrom multimind.agents.tools import CalculatorTool\n\nmodel = OpenAIModel(model="gpt-3.5-turbo")\nmemory = AgentMemory(max_history=10)\ntools = [CalculatorTool()]\n\nagent = Agent(model=model, memory=memory, tools=tools, system_prompt="You are a helpful assistant.")\n\nresponse = agent.run("What is 42 * 17?")\nprint(response)\n'})}),"\n",(0,o.jsx)(t.h2,{id:"2-retrieval-augmented-generation-rag",children:"2. Retrieval-Augmented Generation (RAG)"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from multimind.rag.rag import RAG\nfrom multimind.rag.embeddings import OpenAIEmbedder\nfrom multimind.rag.vector_store import FAISSVectorStore\n\nembedder = OpenAIEmbedder()\nvector_store = FAISSVectorStore()\nrag = RAG(embedder=embedder, vector_store=vector_store)\n\nrag.add_documents(["MultiMind SDK enables unified AI workflows."])\nresults = rag.query("What does MultiMind SDK do?")\nprint(results)\n'})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);