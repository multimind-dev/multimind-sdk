"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[543],{7161:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"Prerequisites","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/multimind-dev/multimind-sdk/edit/develop/docs/getting-started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/introduction"},"next":{"title":"Architecture","permalink":"/docs/architecture"}}');var r=t(4848),s=t(8453);const l={},d="Getting Started",o={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Environment Setup",id:"environment-setup",level:2},{value:"Running the SDK",id:"running-the-sdk",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python 3.8+"}),"\n",(0,r.jsx)(n.li,{children:"pip (Python package manager)"}),"\n",(0,r.jsx)(n.li,{children:"API keys for supported models (e.g., OpenAI, Anthropic, Mistral)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Install MultiMind SDK from PyPI:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pip install multimind-sdk\n"})}),"\n",(0,r.jsx)(n.p,{children:"For development or latest features:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'git clone https://github.com/multimindlabs/multimind-sdk.git\ncd multimind-sdk\npip install -e ".[dev]"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Set your API keys as environment variables or in a ",(0,r.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"OPENAI_API_KEY=sk-...\nANTHROPIC_API_KEY=...\nMISTRAL_API_KEY=...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"running-the-sdk",children:"Running the SDK"}),"\n",(0,r.jsx)(n.p,{children:"You can use the CLI for training, evaluation, and inference:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'multimind train --config configs/train_config.yaml\nmultimind evaluate --model ./output/model --dataset data.json\nmultimind infer --model ./output/model --input "What is PEFT?"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Refer to the CLI help for all available commands:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"multimind --help\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);